
// 이 파일은 프로젝트 내에 약간의 규칙을 두어 언제 봐도 누가 봐도 보기 편한 코드를 만들고자
// 약간의 팁과 함께 규칙을 적언놓은 파일

// 프로젝트 구성


// 서드파티 사용에 대해

	// 만약 존재하면 최대한 다른 모듈을 가져다 쓴다.
	// 개인개발에 가깝기 때문에 시간도없고, 더 잘만들 자신도 없다.
	// 만약 보이면 최대한 가져다 쓰는 것으로

// 사용 서드 파티


// 개념적인 것 ... 표현이 애매한데. 엔간한 프로젝트라면 다 가지고 있을만한 그런 형태의 것들의 정보

	// 파일 I/O		: 현재는 C++사용해서 제작중
	// 문자열		: 이거 어렵다 현재 생각중
	// 시간표기		: <atltime.h>의 CTime 사용


// 클래스 및 데이터 타입의 접두 / 접미

	// A	Application

	// G	Global
	// C	CLASS

	// P	Pointer

	// E	Enum
	// ST	Struct
	// FN	Function


// 변수의 접두 / 접미

	// m_	클래스 내부 변수

	// p			Pointer
	// e			enum
	// n			Numeric	: 사이즈, 카운트 등
	// dw			DWORD	: 해당 데이터의 사이즈가 중요한 경우


// 함수의 접두 / 접미

	// ~~InLock		락이 안에서 불리는 함수


// TCG종류

	// MTG : Magic the Gathering
	// VGD : Vangard


// 주석

	// 리팩토링이 필요한 구간에 해당 주석을 꼭 달아둔다.
	// 리팩토링 : 설명

	// 추가기능이 필요한 구간에 해당 주석을 달도록 한다.
	// 추가 : 설명


// 코딩 룰

	// 함수포인터 제작시 --> typedef VOID (*PFN_INFO_NAME)(VOID);
	// 함수 포인터를 제작해서 쓰려고한다고 하면 여러개 기능을 하나로 묶어서 관리하기 위함일 확률이 높으니까 이렇게 아예 이름을 붙여서
	// 보고 바로 알 수 있도록 제작


// 전체 프로젝트에 추가 할만한 리팩토링, 기능 등

	// 리팩토링 해야하는 리스트 : 각 소스가 아니어도 프로젝트에 추가해야할 점은 여기다 추가
	// 각 TCG마다 파일이 너무 늘어나면 안되 -_-;; 관리 어떻게 할라고

	// 추가
	// ㅇㅅㅇ?


